- train, test의 결측치를 채우는 기준이 되는 데이터 : train
  - 이유: model이 학습하는 데이터는 train (test 데이터를 train 데이터에 맞춰준다면 model의 정확도가 더 좋아질 확률이 높다)

- fare(test) : train 데이터의 Fare 컬럼의 상관관계를 확인
- 상관관계 : 얼마나 연관성이 있는지 수치화
- 상관계수 : -1 ~ ` 사이의 값을 가지고 있으며 -1 또는 1에 가까울 수록 상관성이 높다 또는 관련성이 깊다
- 0에 가까우면 해당 컬럼과 관련성이 떨어진다.
+ 상관관계는 시각화를 시켜서 확인할 수 있다. (히트맵으로 표현. heatmap)

- 상관관계에서 Fare와 Pclass가 가장 관련성이 높다라는 걸 확인
- train에 있는 fare, Pclass의 그룹핑을 진행해보았다.
+ sex 추가 그룹핑
 
결과값 : 등급, 성별에 따른 요금의 중앙값 (1등급의 famale의 요금은 82.66455$)

- train, test 에 Age 결측치 채우기
1) Age 컬럼의 기술통계량
- 대표값으로 사용할 수 있는 값이 무엇인지 찾아내기 위해 
  - 결론 : 평균값과 중앙값이 많이 차이가 나지 않았음으로 그래서 대표값으로 평균값으로 사용하기도 결정함. 
2) Age, Pclass, Sex을 그룹핑
- pclass와 Sex에 따른 Age의 평균값 (gb1)
- train, test 데이터에 있는 age 결측치를 gb1에 있는 평균값으로 채워나감
- 함수를 사용해서 train, test 데이터에 age 결측치가 있는 컬럼의 pclass와 sex을 확인한 다음 gb1에 있는 값으로 채워나감 (fill_age)
- fill_age가 받아오는 결과값을 astype으로 형변환
- 나이 데이터를 실수형으로 사용하는 것보다 정수형으로 사용하는게 자연스러움

 train, test에 cabin 결측치 채우기
- 채워진 데이터보다 결측치가 훨씬 더 많아서 채워진 데이터를 기준으로 결측치를 채우는게 이론상으로 신뢰성있는 데이터가 만들어질 확률이 적음.
우선 임의의 값으로 (M) train, test의 cabin 결측치를 채워주는 작업 (M이 채워져있으면 결측치였구나)

- 처음에 cabin에 unique한 값을 살펴본 결과 범주가 너무 많았음, 문자열 인덱싱을 진행함 (A, B, C로 cabin을 구분해보자)
- 문자열을 인덱싱해서 새로운 컬럼 deck를 만들어냄 (transform)

